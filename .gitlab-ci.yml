workflow:
  rules:
    # Exclude commits with a title containing "[no-ci]"
    - if: $CI_COMMIT_TITLE =~ /\[no-ci\]/
      when: never

    # Don't run for the source branch if there is an open merge request (to avoid duplicate builds)
    # https://docs.gitlab.com/ee/ci/yaml/workflow.html#switch-between-branch-pipelines-and-merge-request-pipelines
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never

    # Run for merge requests, or...
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

    # or run if the branch is the v3.x.x, v3.x.x-hotfix, master or develop branch
    - if: $CI_COMMIT_REF_NAME =~ /(\.x\.x|master|develop)/

    # or run if there is a tag
    - if: $CI_COMMIT_TAG != null

    # or run if the commit message contains "[build-docker]"
    - if: $CI_COMMIT_MESSAGE =~ /\[build-docker\]/

stages:
  - Unit Tests

unittests:
  image: "python:3.10-buster"

  stage: Unit Tests

  rules:
    # Skip if the commit message contains "[skip-tests]"
    - if: $CI_COMMIT_MESSAGE =~ /\[skip-tests\]/
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /(\.x\.x|master|develop)/
      variables:
        BASE_BRANCH: "${CI_COMMIT_REF_NAME}"
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "v3.x.x-hotfix"
      variables:
        BASE_BRANCH: "v3.x.x-hotfix"
    - if: $CI_COMMIT_MESSAGE =~ /\[dodock-branch=(.*)\]/
    - if: $CI_COMMIT_TAG == null

  services:
    - name: mariadb:10.6
      command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--character-set-client-handshake=FALSE', '--innodb_read_only_compressed=OFF']
    - name: redis
      alias: redis_queue
    - name: redis
      alias: redis_cache
    - name: redis
      alias: redis_socketio

  variables:
    BASE_BRANCH: "develop"
    MYSQL_DATABASE: "test_dodock"
    MYSQL_ROOT_PASSWORD: "test_dodock"

  before_script:
    # Fetch base branch from commit message if it contains "[dodock-branch=<branch>]"
    - export BRANCH_FROM_COMMIT_MESSAGE=$(echo "$CI_COMMIT_MESSAGE" | sed -n 's/.*\[dodock-branch=\(.*\)\].*/\1/p')
    - if [ -n "$BRANCH_FROM_COMMIT_MESSAGE" ]; then export BASE_BRANCH="$BRANCH_FROM_COMMIT_MESSAGE"; fi

    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-suggests --no-install-recommends mariadb-client xfonts-75dpi xfonts-base
    - export LANG=C.UTF-8
    - export LC_ALL=C.UTF-8
    - export LANGUAGE=en_US.UTF-8
    - wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.buster_amd64.deb
    - dpkg -i wkhtmltox_0.12.6-1.buster_amd64.deb && rm wkhtmltox_0.12.6-1.buster_amd64.deb
    - rm -rf /var/lib/apt/lists/*
    - rm -rf /etc/apt/sources.list.d/*
    - curl -sL https://deb.nodesource.com/setup_18.x | bash
    - apt-get install -y nodejs
    - npm install --global yarn
    - export PATH=$PATH:/home/dokotest/.local/bin
    - adduser --disabled-password --gecos "" dokotest
    - usermod -aG sudo dokotest
    - echo 'dokotest ALL=(ALL)  NOPASSWD:ALL' >> /etc/sudoers
    - su -c "pip install dokos-cli" dokotest
    - su -c "cd /home/dokotest && bench init dokos-bench --no-backups --skip-redis-config-generation --skip-assets --frappe-branch $BASE_BRANCH" dokotest
    - su -c "cd /home/dokotest/dokos-bench && bench get-app /builds/dokos/payments/" dokotest
    - su -c "cd /home/dokotest/dokos-bench && bench get-app https://gitlab.com/dokos/dokos.git --branch $BASE_BRANCH" dokotest # Added temporarily until this module is fully independant
    - su -c "cd /home/dokotest/dokos-bench && bench config set-common-config -c redis_queue redis://redis_queue:6379 -c redis_cache redis://redis_cache:6379 -c redis_socketio redis://redis_socketio:6379" dokotest
    - su -c "cp -r /home/dokotest/dokos-bench/apps/frappe/test_sites/test_site /home/dokotest/dokos-bench/sites/" dokotest
    - su -c "cd /home/dokotest/dokos-bench && sed -i 's/^watch:/# watch:/g' Procfile"
    - su -c "cd /home/dokotest/dokos-bench && sed -i 's/^schedule:/# schedule:/g' Procfile"
    - su -c "cd /home/dokotest/dokos-bench && sed -i 's/^socketio:/# socketio:/g' Procfile"
    - su -c "cd /home/dokotest/dokos-bench && sed -i 's/^redis_socketio:/# redis_socketio:/g' Procfile"
    - su -c "cd /home/dokotest/dokos-bench && cat Procfile"
    - su -c "cd /home/dokotest/dokos-bench && /home/dokotest/dokos-bench/env/bin/python -m pip install --quiet unittest-xml-reporting"
    - su -c "cd /home/dokotest/dokos-bench && bench add-to-hosts" dokotest
    - su -c "cd /home/dokotest/dokos-bench && bench start &> bench_start.log &" dokotest
    - su -c "cd /home/dokotest/dokos-bench && bench --site test_site reinstall --yes --mariadb-root-password test_dodock" dokotest
    - su -c "cd /home/dokotest/dokos-bench && bench --site test_site install-app dokos" dokotest
    - su -c "cd /home/dokotest/dokos-bench && bench build --app payments" dokotest

  script:
    - su -c "cd /home/dokotest/dokos-bench && bench --site test_site run-parallel-tests --app payments" dokotest
